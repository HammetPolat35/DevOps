name: ROS2 Foxy CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    env:
      COLCON_DEFAULTS_FILE: colcon.defaults.yaml

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with: 
        name: test-results
        path: test_results/

    - name: Set up ROS 2 humble
      uses: ros-tooling/setup-ros@main
      with:
        required-ros-distributions: humble
    - name: install ros2 packages
      run: |
        sudo apt update
        sudo apt install -y ros-humble-ros-base

    - name: Install dependencies
      run: |
        set -ex  # Echo commands and exit on error

        echo "Running apt update..."
        sudo apt update -y

        echo "Installing required packages..."
        sudo apt install -y \
          python3-colcon-common-extensions \
          lcov \
          cppcheck \
          gcovr \
          python3-pip

        echo "Upgrading pip..."
        pip3 install --upgrade pip

        echo "Installing pytest and pytest-cov..."
        pip3 install pytest pytest-cov

        echo "Dependencies installed successfully!"

    - name: Clean old build
      run: rm -rf build/ install/ log/

    - name: Run cppcheck
      run: cppcheck --enable=all --inconclusive --std=c++14 --language=c++ src/

    - name: Build with coverage flags
      run: |
        source /opt/ros/humble/setup.bash
        colcon build --packages-select cpp_pubsub \
          --cmake-clean-cache \
          --cmake-args -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug

    - name: Source the workspace
      run: source install/setup.bash

    - name: Run unit tests
      run: |
        source install/setup.bash
        GTEST_OUTPUT="xml:test_results" colcon test --packages-select cpp_pubsub
        colcon test-result --verbose
        
    - name: Run nodes to generate coverage
      run: |
        source install/setup.bash
        timeout 5s ros2 run cpp_pubsub talker &
        timeout 5s ros2 run cpp_pubsub listener || true

    - name: Generate coverage info
      run: |
        source install/setup.bash
        lcov --capture --directory build/cpp_pubsub --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '*/test/*' --output-file coverage_filtered.info
        genhtml coverage_filtered.info --output-directory coverage_report

    - name: Fail if coverage < 10%
      run: |
        line_cov=$(lcov --summary coverage_filtered.info | grep "lines" | awk '{print $2}' | tr -d '%')
        echo "Line coverage: $line_cov%"
        cov_int=${line_cov%.*}
        if [ $cov_int -lt 10 ]; then
          echo "Coverage ($cov_int%) is below threshold (10%)"
          exit 1
        else
          echo "Coverage check passed"
        fi

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage_report

